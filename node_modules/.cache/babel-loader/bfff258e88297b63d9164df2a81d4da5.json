{"ast":null,"code":"var ls = {};\n\nls.gk = item => {\n  localStorage.getItem(item);\n};\n\nls.sk = (item, value) => {\n  localStorage.setItem(item, value);\n};\n\nls.gkJSON = item => {\n  try {\n    return JSON.parse(localStorage.getItem(item));\n  } catch (e) {\n    return null;\n  }\n};\n\nglobal.API_ENDPOINT = \"https://www.rogueshopsdemo.com/api\";\nglobal.SITE_DOMAIN = \"https://www.rogueshops.com/\";\nglobal.SITE_NAME = \"RogueShops\";\nglobal.API = {};\nglobal.API.cacheLoaded = false;\nglobal.API.cache = {};\nglobal.API.tools = {};\n\nglobal.API.tools.toSlug = (id, title) => {\n  var stringSanitizer = require(\"string-sanitizer\");\n\n  return String(stringSanitizer.sanitize.addDash(id + \" \" + title)).toLowerCase();\n};\n\nglobal.API.tools.toCategorySlug = text => {\n  var stringSanitizer = require(\"string-sanitizer\");\n\n  return String(stringSanitizer.sanitize.addDash(text)).toLowerCase();\n};\n\nglobal.API.tools.formatMoney = price => {\n  return \"$\" + String(parseFloat(price).toFixed(2));\n};\n\nglobal.API.lookupVariant = (pid, vid) => {\n  return new Promise(function (resolve, reject) {\n    var endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products?id=\" + encodeURI(pid);\n    var variants = [];\n    var filtered = [];\n    fetch(endpointProducts).then(res => res.json()).then(success => {\n      variants = success.data.variants;\n      filtered = variants.filter(function (variant) {\n        if (variant.id == vid) {\n          return true;\n        }\n      });\n      var ret = {\n        variant_id: filtered[0].id,\n        product_id: filtered[0].product_id,\n        options: []\n      };\n\n      for (var i of filtered[0].option_values) {\n        ret.options.push({\n          title: String(i.option_display_name),\n          value: String(i.label)\n        });\n      }\n\n      resolve(ret);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.getProducts = (id, category) => {\n  return new Promise(function (resolve, reject) {\n    var endpointProducts = \"\";\n\n    if (id) {\n      endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products?id=\" + parseInt(id);\n    } else if (category) {\n      endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products?categories=\" + parseInt(category);\n    } else {\n      endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products\";\n    }\n\n    fetch(endpointProducts).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.searchProducts = query => {\n  return new Promise(function (resolve, reject) {\n    var endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products?search=\";\n    endpointProducts += encodeURIComponent(query);\n    fetch(endpointProducts).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.getSimpleProducts = () => {\n  var stringSanitizer = require(\"string-sanitizer\");\n\n  return new Promise(function (resolve, reject) {\n    var endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products\";\n    var dict_array = [];\n    fetch(endpointProducts).then(res => res.json()).then(success => {\n      for (var i = 0; i < success.data.data.length; i++) {\n        let item = {\n          title: success.data.data[i].name,\n          price: success.data.data[i].price,\n          image: success.data.data[i].images.length > 0 ? success.data.data[i].images[0].url_standard : \"\",\n          slug: stringSanitizer.sanitize.addDash(success.data.data[i].id + \" \" + success.data.data[i].name)\n        };\n        dict_array.push(item);\n      }\n\n      resolve(dict_array);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.getCart = () => {\n  return new Promise(function (resolve, reject) {\n    var endpointCart = global.API_ENDPOINT + \"/shop/bigcommerce/cart\";\n    fetch(endpointCart).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.addToCart = (id, quantity, options = null) => {\n  return new Promise(function (resolve, reject) {\n    var endpointCart = global.API_ENDPOINT + \"/shop/bigcommerce/cart?pid=\" + id + (quantity ? \"&quantity=\" + quantity : \"\");\n    var optionsString = \"\";\n\n    if (options) {\n      for (var option of options) {\n        // optionsString += option.id + \":\" + option.currentValue + \",\";\n        optionsString += option.currentValue + \",\";\n      }\n\n      optionsString = optionsString.substring(0, optionsString.length - 1);\n      endpointCart += \"&options=\" + encodeURIComponent(optionsString);\n    }\n\n    fetch(endpointCart, {\n      method: 'POST',\n      headers: {\n        // 'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.removeFromCart = id => {\n  return new Promise(function (resolve, reject) {\n    var endpointCart = global.API_ENDPOINT + \"/shop/bigcommerce/cart?pid=\" + id;\n    fetch(endpointCart, {\n      method: 'DELETE'\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.updateCart = (id, quantity) => {\n  return new Promise(function (resolve, reject) {\n    var endpointUpdateCart = global.API_ENDPOINT + \"/shop/bigcommerce/cart\";\n    var content = {\n      pid: parseInt(id),\n      quantity: parseInt(quantity)\n    };\n    fetch(endpointUpdateCart, {\n      method: 'PUT',\n      body: JSON.stringify(content)\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.login = (email, password) => {\n  return new Promise(function (resolve, reject) {\n    var endpointLogin = global.API_ENDPOINT + \"/user/login\";\n    let content = {\n      \"email\": email,\n      \"password\": password\n    };\n    fetch(endpointLogin, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.logout = () => {\n  return new Promise(function (resolve, reject) {\n    var endpointLogout = global.API_ENDPOINT + \"/user/logout\";\n    fetch(endpointLogout).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.register = (fname, lname, email, phone, password) => {\n  return new Promise(function (resolve, reject) {\n    var endpointRegister = global.API_ENDPOINT + \"/user/register\";\n    let content = {\n      \"first_name\": fname,\n      \"last_name\": lname,\n      \"email\": email,\n      \"phone\": phone,\n      \"password\": password\n    };\n    fetch(endpointRegister, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.forgotPassword = email => {\n  return new Promise(function (resolve, reject) {\n    var endpointForgotPassword = global.API_ENDPOINT + \"/user/forgot_password\";\n    let content = {\n      \"email\": email\n    };\n    fetch(endpointForgotPassword, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.dashboard = () => {\n  return new Promise(function (resolve, reject) {\n    var endpointDashboard = global.API_ENDPOINT + \"/user/dashboard\";\n    fetch(endpointDashboard).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.checkout = content_dict => {\n  return new Promise(function (resolve, reject) {\n    var endpointCheckout = global.API_ENDPOINT + \"/shop/bigcommerce/cart/order\";\n    fetch(endpointCheckout, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content_dict)\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.getCategories = () => {\n  return new Promise(function (resolve, reject) {\n    var endpointCategories = global.API_ENDPOINT + \"/shop/bigcommerce/products/categories\";\n    fetch(endpointCategories).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.postForgotPassword = email => {\n  return new Promise(function (resolve, reject) {\n    var endpointForgotPassword = global.API_ENDPOINT + \"/user/forgot_password\";\n    var content = {\n      email: email\n    };\n    fetch(endpointForgotPassword, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(content)\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.addCoupon = code => {\n  return new Promise(function (resolve, reject) {\n    var endpointCoupon = global.API_ENDPOINT + \"/shop/bigcommerce/cart/add_coupon/\" + code;\n    fetch(endpointCoupon, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.removeCoupon = code => {\n  return new Promise(function (resolve, reject) {\n    var endpointCoupon = global.API_ENDPOINT + \"/shop/bigcommerce/cart/remove_coupon/\" + code;\n    fetch(endpointCoupon, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.getUserInfo = () => {\n  return new Promise(function (resolve, reject) {\n    var endpointUserInfo = global.API_ENDPOINT + \"/user/user_info\";\n    fetch(endpointUserInfo).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};\n\nglobal.API.sendContactMessage = dict => {\n  return new Promise(function (resolve, reject) {\n    var endpointContact = global.API_ENDPOINT + \"/user/email\";\n    var content = {\n      first_name: String(dict.first_name),\n      last_name: String(dict.last_name),\n      email: String(dict.email),\n      order_number: parseInt(dict.order_number),\n      company_name: String(dict.company_name),\n      rma_number: parseInt(dict.rma_number),\n      subject: String(dict.subject),\n      message: String(dict.message)\n    };\n    fetch(endpointContact, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    }).then(res => res.json()).then(success => {\n      resolve(success);\n    }, error => {\n      reject(error);\n    });\n  });\n};","map":{"version":3,"sources":["/Users/hsalmon/Dev/rogue_templates/RS-tactical_kinetics/src/api.js"],"names":["ls","gk","item","localStorage","getItem","sk","value","setItem","gkJSON","JSON","parse","e","global","API_ENDPOINT","SITE_DOMAIN","SITE_NAME","API","cacheLoaded","cache","tools","toSlug","id","title","stringSanitizer","require","String","sanitize","addDash","toLowerCase","toCategorySlug","text","formatMoney","price","parseFloat","toFixed","lookupVariant","pid","vid","Promise","resolve","reject","endpointProducts","encodeURI","variants","filtered","fetch","then","res","json","success","data","filter","variant","ret","variant_id","product_id","options","i","option_values","push","option_display_name","label","error","getProducts","category","parseInt","searchProducts","query","encodeURIComponent","getSimpleProducts","dict_array","length","name","image","images","url_standard","slug","getCart","endpointCart","addToCart","quantity","optionsString","option","currentValue","substring","method","headers","removeFromCart","updateCart","endpointUpdateCart","content","body","stringify","login","email","password","endpointLogin","logout","endpointLogout","register","fname","lname","phone","endpointRegister","forgotPassword","endpointForgotPassword","dashboard","endpointDashboard","checkout","content_dict","endpointCheckout","getCategories","endpointCategories","postForgotPassword","addCoupon","code","endpointCoupon","removeCoupon","getUserInfo","endpointUserInfo","sendContactMessage","dict","endpointContact","first_name","last_name","order_number","company_name","rma_number","subject","message"],"mappings":"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","sourcesContent":["var ls = {};\n\nls.gk = (item) => { localStorage.getItem(item) }\nls.sk = (item, value) => { localStorage.setItem(item, value) }\nls.gkJSON = (item) => {\n    try {\n        return JSON.parse(localStorage.getItem(item));\n    } catch(e) {\n        return null;\n    }\n}\n\nglobal.API_ENDPOINT = \"https://www.rogueshopsdemo.com/api\";\nglobal.SITE_DOMAIN = \"https://www.rogueshops.com/\";\nglobal.SITE_NAME = \"RogueShops\";\nglobal.API = {};\nglobal.API.cacheLoaded = false;\nglobal.API.cache = {};\nglobal.API.tools = {};\n\nglobal.API.tools.toSlug = (id, title) => {\n    var stringSanitizer = require(\"string-sanitizer\");\n    return String(stringSanitizer.sanitize.addDash(id + \" \" + title)).toLowerCase();\n}\n\nglobal.API.tools.toCategorySlug = (text) => {\n    var stringSanitizer = require(\"string-sanitizer\");\n    return String(stringSanitizer.sanitize.addDash(text)).toLowerCase();\n}\n\nglobal.API.tools.formatMoney = (price) => {\n    return \"$\" + String(parseFloat(price).toFixed(2));\n}\n\nglobal.API.lookupVariant = (pid, vid) => {\n    return new Promise(function(resolve, reject) {\n        var endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products?id=\" + encodeURI(pid);\n        var variants = [];\n        var filtered = [];\n        fetch(endpointProducts)\n        .then(res => res.json())\n        .then(\n            (success) => {\n                variants = success.data.variants;\n                filtered = variants.filter(function(variant) {\n                    if(variant.id == vid) {\n                        return true;\n                    }\n                });\n                var ret = {\n                    variant_id: filtered[0].id,\n                    product_id: filtered[0].product_id,\n                    options: []\n                };\n                for(var i of filtered[0].option_values) {\n                    ret.options.push({\n                        title: String(i.option_display_name),\n                        value: String(i.label)\n                    });\n                }\n                resolve(ret);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n}\n\nglobal.API.getProducts = (id, category) => {\n    return new Promise(function(resolve, reject) {\n        var endpointProducts = \"\";\n        if(id) {\n            endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products?id=\" + parseInt(id);\n        } else if(category) {\n            endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products?categories=\" + parseInt(category);\n        } else {\n            endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products\";\n        }\n        fetch(endpointProducts)\n        .then(res => res.json())\n        .then(\n        (success) => {\n            resolve(success);\n        },\n        (error) => {\n            reject(error);\n        });\n    });\n};\n\nglobal.API.searchProducts = (query) => {\n    return new Promise(function(resolve, reject) {\n        var endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products?search=\";\n        endpointProducts += encodeURIComponent(query);\n        fetch(endpointProducts)\n        .then(res => res.json())\n        .then(\n        (success) => {\n            resolve(success);\n        },\n        (error) => {\n            reject(error);\n        });\n    });\n}\n\nglobal.API.getSimpleProducts = () => {\n    var stringSanitizer = require(\"string-sanitizer\");\n    return new Promise(function(resolve, reject) {\n        var endpointProducts = global.API_ENDPOINT + \"/shop/bigcommerce/products\";\n        var dict_array = [];\n        fetch(endpointProducts)\n        .then(res => res.json())\n        .then(\n        (success) => {\n            for(var i = 0; i < success.data.data.length; i++) {\n                let item = {\n                    title: success.data.data[i].name,\n                    price: success.data.data[i].price,\n                    image: success.data.data[i].images.length > 0 ? success.data.data[i].images[0].url_standard : \"\",\n                    slug: stringSanitizer.sanitize.addDash(success.data.data[i].id + \" \" + success.data.data[i].name),\n                }\n                dict_array.push(item);\n            }\n            resolve(dict_array);\n        },\n        (error) => {\n            reject(error);\n        });\n    });\n}\n\nglobal.API.getCart = () => {\n    return new Promise(function(resolve, reject) {\n        var endpointCart = global.API_ENDPOINT + \"/shop/bigcommerce/cart\";\n        fetch(endpointCart)\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n};\n\nglobal.API.addToCart = (id, quantity, options=null) => {\n    return new Promise(function(resolve, reject) {\n        var endpointCart = global.API_ENDPOINT + \"/shop/bigcommerce/cart?pid=\" + id + (quantity ? \"&quantity=\" + quantity : \"\");\n        var optionsString = \"\";\n        if(options) {\n            for(var option of options) {\n                // optionsString += option.id + \":\" + option.currentValue + \",\";\n                optionsString += option.currentValue + \",\";\n            }\n            optionsString = optionsString.substring(0, optionsString.length-1);\n            endpointCart += \"&options=\" + encodeURIComponent(optionsString);\n        }\n        fetch(endpointCart, {\n            method: 'POST',\n            headers: {\n                // 'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n};\n\nglobal.API.removeFromCart = (id) => {\n    return new Promise(function(resolve, reject) {\n        var endpointCart = global.API_ENDPOINT + \"/shop/bigcommerce/cart?pid=\" + id;\n        fetch(endpointCart, {\n            method: 'DELETE'\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n}\n\nglobal.API.updateCart = (id, quantity) => {\n    return new Promise(function(resolve, reject) {\n        var endpointUpdateCart = global.API_ENDPOINT + \"/shop/bigcommerce/cart\";\n        var content = {\n            pid: parseInt(id),\n            quantity: parseInt(quantity)\n        }\n        fetch(endpointUpdateCart, {\n            method: 'PUT',\n            body: JSON.stringify(content)\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n}\n\nglobal.API.login = (email, password) => {\n    return new Promise(function(resolve, reject) {\n        var endpointLogin = global.API_ENDPOINT + \"/user/login\";\n        let content = {\n            \"email\": email,\n            \"password\": password\n        }\n        fetch(endpointLogin, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(content)\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n};\n\nglobal.API.logout = () => {\n    return new Promise(function(resolve, reject) {\n        var endpointLogout = global.API_ENDPOINT + \"/user/logout\";\n        fetch(endpointLogout)\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n};\n\nglobal.API.register = (fname, lname, email, phone, password) => {\n    return new Promise(function(resolve, reject) {\n        var endpointRegister = global.API_ENDPOINT + \"/user/register\";\n        let content = {\n            \"first_name\": fname,\n            \"last_name\": lname,\n            \"email\": email,\n            \"phone\": phone,\n            \"password\": password\n        }\n        fetch(endpointRegister, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(content)\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n};\n\nglobal.API.forgotPassword = (email) => {\n    return new Promise(function(resolve, reject) {\n        var endpointForgotPassword = global.API_ENDPOINT + \"/user/forgot_password\";\n        let content = {\n            \"email\": email\n        }\n        fetch(endpointForgotPassword, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(content)\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n};\n\nglobal.API.dashboard = () => {\n    return new Promise(function(resolve, reject) {\n        var endpointDashboard = global.API_ENDPOINT + \"/user/dashboard\";\n        fetch(endpointDashboard)\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n};\n\nglobal.API.checkout = (content_dict) => {\n    return new Promise(function(resolve, reject) {\n        var endpointCheckout = global.API_ENDPOINT + \"/shop/bigcommerce/cart/order\";\n        fetch(endpointCheckout, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(content_dict)\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n};\n\nglobal.API.getCategories = () => {\n    return new Promise(function(resolve, reject) {\n        var endpointCategories = global.API_ENDPOINT + \"/shop/bigcommerce/products/categories\";\n        fetch(endpointCategories)\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n}\n\nglobal.API.postForgotPassword = (email) => {\n    return new Promise(function(resolve, reject) {\n        var endpointForgotPassword = global.API_ENDPOINT + \"/user/forgot_password\";\n        var content = {\n            email: email\n        }\n        fetch(endpointForgotPassword, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(content)\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n}\n\nglobal.API.addCoupon = (code) => {\n    return new Promise(function(resolve, reject) {\n        var endpointCoupon = global.API_ENDPOINT + \"/shop/bigcommerce/cart/add_coupon/\" + code;\n        fetch(endpointCoupon,{\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n}\n\nglobal.API.removeCoupon = (code) => {\n    return new Promise(function(resolve, reject) {\n        var endpointCoupon = global.API_ENDPOINT + \"/shop/bigcommerce/cart/remove_coupon/\" + code;\n        fetch(endpointCoupon,{\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n}\n\nglobal.API.getUserInfo = () => {\n    return new Promise(function(resolve, reject) {\n        var endpointUserInfo = global.API_ENDPOINT + \"/user/user_info\";\n        fetch(endpointUserInfo)\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n}\n\nglobal.API.sendContactMessage = (dict) => {\n    return new Promise(function(resolve, reject) {\n        var endpointContact = global.API_ENDPOINT + \"/user/email\";\n        var content = {\n            first_name: String(dict.first_name),\n            last_name: String(dict.last_name),\n            email: String(dict.email),\n            order_number: parseInt(dict.order_number),\n            company_name: String(dict.company_name),\n            rma_number: parseInt(dict.rma_number),\n            subject: String(dict.subject),\n            message: String(dict.message)\n        }\n        fetch(endpointContact, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(content)\n        })\n        .then(res => res.json())\n        .then(\n            (success) => {\n                resolve(success);\n            },\n            (error) => {\n                reject(error);\n            }\n        );\n    });\n}\n"]},"metadata":{},"sourceType":"module"}