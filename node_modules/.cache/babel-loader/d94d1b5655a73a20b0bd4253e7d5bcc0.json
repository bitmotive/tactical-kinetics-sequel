{"ast":null,"code":"var _jsxFileName = \"/Users/hsalmon/Dev/rogue_templates/RS-tactical_kinetics/src/components/pages/Collection.jsx\";\n\n/*\n=====================================================\nOMEGA19 Page\nCollection\n=====================================================\n*/\nimport React from 'react';\nimport Template from '../Template';\nimport CollectionConstructor from '../CollectionConstructor';\nimport Metadata from '../Metadata';\nexport default class Collection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collections: null,\n      isAllProducts: false,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    var stringSanitizer = require(\"string-sanitizer\");\n\n    const collectionURI = this.props.match.params.collectionURI;\n\n    if (collectionURI == \"all\") {\n      this.setState({\n        isAllProducts: true,\n        isLoaded: true\n      });\n    } else {\n      var collectionsCondensed = [];\n      global.API.getCategories().then(success => {\n        for (var category of success.data) {\n          collectionsCondensed.push({\n            id: category.id,\n            title: category.page_title.length > 0 ? category.page_title : category.name,\n            slug: stringSanitizer.sanitize.addDash(String(category.name).toLowerCase())\n          });\n        }\n\n        this.setState({\n          collections: collectionsCondensed,\n          isLoaded: true\n        });\n      }, error => {});\n    }\n  }\n\n  renderCollectionConstructor() {\n    if (this.state.isLoaded) {\n      if (this.state.isAllProducts) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Metadata, {\n          title: \"Collection - All products\",\n          description: \"\",\n          url: this.props.location.pathname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(CollectionConstructor, {\n          id: \"all\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      } else {\n        var uri = String(this.props.match.params.collectionURI).toLowerCase();\n        var found = this.state.collections.find(function (a) {\n          return a.slug.includes(uri);\n        });\n\n        if (found) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(Metadata, {\n            title: \"Collection - \" + found.title,\n            description: \"\",\n            url: this.props.location.pathname,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }), React.createElement(CollectionConstructor, {\n            title: found.title,\n            id: found.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }));\n        }\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(Template, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.renderCollectionConstructor());\n  }\n\n}","map":{"version":3,"sources":["/Users/hsalmon/Dev/rogue_templates/RS-tactical_kinetics/src/components/pages/Collection.jsx"],"names":["React","Template","CollectionConstructor","Metadata","Collection","Component","constructor","props","state","collections","isAllProducts","isLoaded","componentDidMount","stringSanitizer","require","collectionURI","match","params","setState","collectionsCondensed","global","API","getCategories","then","success","category","data","push","id","title","page_title","length","name","slug","sanitize","addDash","String","toLowerCase","error","renderCollectionConstructor","location","pathname","uri","found","find","a","includes","render"],"mappings":"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","sourcesContent":["/*\n=====================================================\nOMEGA19 Page\nCollection\n=====================================================\n*/\n\nimport React from 'react';\nimport Template from '../Template';\nimport CollectionConstructor from '../CollectionConstructor';\nimport Metadata from '../Metadata';\n\nexport default class Collection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collections: null,\n            isAllProducts: false,\n            isLoaded: false\n        };\n    }\n    componentDidMount() {\n        var stringSanitizer = require(\"string-sanitizer\");\n\n        const { collectionURI } = this.props.match.params;\n        \n        if(collectionURI == \"all\") {\n            this.setState({\n                isAllProducts: true,\n                isLoaded: true\n            });\n        } else {\n            var collectionsCondensed = [];\n            global.API.getCategories().then(\n                (success) => {\n                    for(var category of success.data) {\n                        collectionsCondensed.push({\n                            id: category.id,\n                            title: category.page_title.length > 0 ? category.page_title : category.name,\n                            slug: stringSanitizer.sanitize.addDash(String(category.name).toLowerCase()),                        \n                        });\n                    }\n                    this.setState({\n                        collections: collectionsCondensed,\n                        isLoaded: true\n                    });\n                },\n                (error) => {}\n            );\n        }\n        \n    }\n    renderCollectionConstructor() {\n        if(this.state.isLoaded) {\n            if(this.state.isAllProducts) {\n                return (\n                    <div>\n                        <Metadata title={\"Collection - All products\"} description=\"\" url={this.props.location.pathname}/>\n                        <CollectionConstructor id={\"all\"}/>\n                    </div>\n                );\n            } else {\n                var uri = String(this.props.match.params.collectionURI).toLowerCase();\n                var found = this.state.collections.find(function(a) {\n                    return a.slug.includes(uri);\n                });\n                if(found) {\n                    return (\n                        <div>\n                            <Metadata title={\"Collection - \" + found.title} description=\"\" url={this.props.location.pathname}/>\n                            <CollectionConstructor title={found.title} id={found.id}/>\n                        </div>\n                    );\n                }\n            }\n        }\n    }\n    render() {\n        return (\n            <Template>\n                {this.renderCollectionConstructor()}\n            </Template>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}